[tool.poetry]
name = "vantage-api"
version = "3.0.0"
description = "Backend project for the Vantage SaaS."
authors = ["Omnivector Solutions <info@omnivector.solutions>"]

[tool.poetry.dependencies]
python = "^3.10"
requests = "2.31.0"
boto3 = "^1.34.49"
fastapi = "^0.68.0"
pydantic = "1.10.13"
email-validator = "^1.1.2"
python-dotenv = "^0.16.0"
httpx = "0.23.0"
loguru = "^0.5.3"
sentry-sdk = "1.33.1"
armasec = "^0.11.0"
toml = "^0.10.2"
uvicorn = "^0.15.0"
PyJWT = "^2.3.0"
boto3-stubs = {extras = ["cloudformation", "ec2", "efs", "s3", "ses", "ssm", "sts", "iam", "meteringmarketplace", "marketplace-entitlement", "pricing"], version = "^1.36.12"}
aio-pika = "^8.3.0"
nest-asyncio = "^1.5.6"
SQLAlchemy = {version = "^1.4.6", extras = ["mypy", "asyncio"]}
SQLAlchemy-Utils = "^0.40.0"
psycopg2-binary = "2.9.6"
alembic = "^1.9.2"
Jinja2 = "^3.1.2"
asyncpg = "^0.28.0"
strawberry-graphql = {version = "^0.189.1", extras = ["fastapi"]}
typer = "^0.12.3"
jsondiff = "^2.2.0"
pandas = "^2.2.2"

[tool.poetry.group.dev.dependencies]
testcontainers = "^3.7.1"
ruff = "^0.1.13"
pytest-env = "^0.6.2"
types-toml = "^0.10.8.7"
asgi-lifespan = "^1.0.1"
pytest = "^6.2.5"
pytest-asyncio = "^0.15.1"
pytest-cov = "^2.12.1"
pytest-html = "^3.1.1"
pytest-mock = "^3.7.0"
pytest-random-order = "^1.0.4"
Sphinx = "^4.2.0"
sphinx-copybutton = "^0.4.0"
freezegun = "^1.2.2"
respx = "^0.20.1"
aws-cdk-lib = "^2.124.0"
cfnresponse = "^1.1.2"
constructs = "^10"


[tool.poetry.group.stack.dependencies]
aws-cdk-lib = "^2.124.0"
constructs = "^10"
cfnresponse = "^1.1.2"
boto3 = "^1.34.49"

[tool.isort]
profile = "black"
include_trailing_comma = true
line_length = 110
length_sort = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = [
    "-v",
    "--html=test-reports/report.html",
    "--self-contained-html",
    "--cov=api",
    "--cov-report=html:test-reports/coverage",
    "--junitxml=test-reports/junit.xml",
    "--log-file=test-reports/logs.txt",
]
testpaths = ["tests"]
env = [
    "TEST_ENV = true",
    "AWS_DEFAULT_REGION = us-west-2",
    "AWS_ACCESS_KEY_ID = dummy",
    "AWS_SECRET_ACCESS_KEY = dummy",
    "ARMASEC_DOMAIN = armasec.dev",
    "MANAGEMENT_CLIENT_ID = abcdefghijklmn",
    "MANAGEMENT_CLIENT_SECRET = abcdefghijklmn",
    "MANAGEMENT_ENDPOINT = https://testenv.omnivector.solutions",
    "DB_USERNAME = dummy",
    "DB_PASSWORD = dummy",
    "DB_HOST = dummy",
    "DB_PORT = 1234",
    "STAGE = staging",
    "SENTRY_DSN = https://omnivector.sentry.com",
    "MQ_HOST = mock.local",
    "MQ_USERNAME = omnivector",
    "MQ_PASSWORD = 123456",
    "MQ_VIRTUAL_HOST = dev",
    "MQ_EXCHANGE = dev",
    "KC_DB_HOST = dummy",
    "KC_DB_USERNAME = dummy",
    "KC_DB_PASSWORD = dummy",
    "KC_DB_DATABASE = dummy",
    "KC_DB_DATABASE = dummy",
    "AWS_MKT_SUBSCRIPTION_TOPIC = http://dummytopic_subscription",
    "AWS_ROLE_NAME_MKT = arn:aws:iam::123456:role/dummy"
]

[tool.coverage.report]
show_missing = true
omit = [
    "api/identity/management_api.py",
    "scripts/rpc_server.py"
]

[tool.ruff]
line-length = 110
select = ["E", "W", "F", "C", "N", "D", "I001", "I"]
ignore = ["D213", "D211", "D203", "C408"]
extend-exclude = ["__pycache__", "*.egg_info", "__init__.py", "jupyter_config*"]

[tool.ruff.lint.per-file-ignores]
"api/sql_app/queries.py" = ["E501"]
"api/broker_app/rpc_client.py" = ["E402"]

[tool.ruff.lint]
fixable = ["ALL"]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
