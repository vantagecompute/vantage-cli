"""Added deleting status to cluster status enum

Revision ID: 2eb95042d582
Revises: 6df66e9e3021
Create Date: 2024-01-23 11:41:36.700448

"""
from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision = "2eb95042d582"
down_revision = "6df66e9e3021"
branch_labels = None
depends_on = None

old_options = ("prepared", "connected")
new_options = old_options + ("deleting",)
old_enum = sa.Enum(*old_options, name="clusterstatusenum")
new_enum = sa.Enum(*new_options, name="clusterstatusenum")
tmp_enum = sa.Enum(*new_options, name="_status")


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    # Create a tempoary "_status" type, convert and drop the "old" type
    tmp_enum.create(op.get_bind(), checkfirst=False)
    op.execute("ALTER TABLE cluster ALTER COLUMN status TYPE _status" " USING status::text::_status")
    old_enum.drop(op.get_bind(), checkfirst=False)

    # Create and convert to the "new" status type
    new_enum.create(op.get_bind(), checkfirst=False)
    op.execute(
        "ALTER TABLE cluster ALTER COLUMN status TYPE clusterstatusenum"
        " USING status::text::clusterstatusenum"
    )
    tmp_enum.drop(op.get_bind(), checkfirst=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    # Create a tempoary "_status" type, convert and drop the "new" type
    tmp_enum.create(op.get_bind(), checkfirst=False)
    op.execute("ALTER TABLE cluster ALTER COLUMN status TYPE _status" " USING status::text::_status")
    new_enum.drop(op.get_bind(), checkfirst=False)

    # Create and convert to the "old" status type
    old_enum.create(op.get_bind(), checkfirst=False)
    op.execute(
        "ALTER TABLE cluster ALTER COLUMN status TYPE clusterstatusenum"
        " USING status::text::clusterstatusenum"
    )
    tmp_enum.drop(op.get_bind(), checkfirst=False)

    # ### end Alembic commands ###
