name: Deploy Docs

on:
  pull_request:
    branches: ["main"]
    types: [closed]
    labels: ["deploy-docs", "auto-merge"]

  workflow_dispatch:
    inputs:
      event_type:
        description: 'repository_dispatch event_type'
        required: false
        default: 'cli-docs-updated'

concurrency:
  group: "pages"
  cancel-in-progress: false

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    name: Build Docusaurus
    runs-on: ubuntu-24.04
    # Only run when docs are updated by github-actions bot, manual dispatch, or PR merged
    if: |
      github.event_name == 'workflow_dispatch' || 
      (github.event.pull_request.merged == true && github.actor == 'github-actions[bot]' && contains(github.event.pull_request.title, 'docs: auto-update generated documentation')) ||
      (github.event.pull_request.merged == true && contains(github.event.pull_request.title, 'docs:'))

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: yarn
          cache-dependency-path: docusaurus/yarn.lock

      - name: Install just
        run: sudo snap install just --classic

      - name: Install UV
        run: sudo snap install astral-uv --classic

      - name: Build website (if build files don't exist)
        run: |
          if [ ! -d "docusaurus/build" ]; then
            echo "Build files not found, generating documentation and building..."
            just docs-build
          else
            echo "Build files found, skipping documentation generation"
          fi


      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload build directory
          path: './docusaurus/build'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  dispatch:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Gather context
        id: ctx
        run: |
          echo "sha=$(git rev-parse --short HEAD || echo $GITHUB_SHA)" >> $GITHUB_OUTPUT
          echo "ref=$GITHUB_REF" >> $GITHUB_OUTPUT
          echo "repo=${GITHUB_REPOSITORY}" >> $GITHUB_OUTPUT
          echo "actor=${GITHUB_ACTOR}" >> $GITHUB_OUTPUT

      - name: Send repository_dispatch to vantage-docs
        env:
          TOKEN: ${{ secrets.PLATFORM_REPO_TOKEN }}
          TARGET_REPO: vantagecompute/vantage-docs
          EVENT_TYPE: ${{ github.event_name == 'workflow_dispatch' && inputs.event_type || 'cli-docs-updated' }}
          SHA: ${{ steps.ctx.outputs.sha }}
          REF: ${{ steps.ctx.outputs.ref }}
          REPO: ${{ steps.ctx.outputs.repo }}
          ACTOR: ${{ steps.ctx.outputs.actor }}
        run: |
          if [ -z "$TOKEN" ]; then
            echo "Missing secret PLATFORM_REPO_TOKEN" >&2
            exit 1
          fi

          # Build the JSON payload
          read -r -d '' PAYLOAD <<EOF
          {
            "event_type": "${EVENT_TYPE}",
            "client_payload": {
              "source_repo": "${REPO}",
              "source_ref": "${REF}",
              "source_sha": "${SHA}",
              "actor": "${ACTOR}"
            }
          }
          EOF

          # Fire the dispatch
          curl -sS -X POST \
            -H "Authorization: token ${TOKEN}" \
            -H "Accept: application/vnd.github+json" \
            https://api.github.com/repos/${TARGET_REPO}/dispatches \
            -d "${PAYLOAD}" \
            | tee /dev/stderr

    # Optional: prevent overlapping dispatches
    concurrency:
      group: notify-platform-${{ github.ref }}
      cancel-in-progress: false