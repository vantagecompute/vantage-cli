name: Update Documentation

on:
  push:
    branches: ["main"]
    paths:
      - 'vantage_cli/**'
      - 'scripts/generate_complete_docs.py'
      - 'scripts/update_docs_version.py'
      - 'pyproject.toml'
      - 'docusaurus/**'
  
  workflow_dispatch:

concurrency:
  group: "update-docs"
  cancel-in-progress: true

permissions:
  contents: write
  pull-requests: write

jobs:
  update-docs:
    name: Update Documentation
    runs-on: ubuntu-24.04
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: yarn
          cache-dependency-path: docusaurus/yarn.lock

      - name: Install just
        run: sudo snap install just --classic

      - name: Install UV
        run: sudo snap install astral-uv --classic

      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Generate updated documentation
        run: |
          echo "Generating updated CLI documentation..."
          python3 scripts/generate_complete_docs.py
          python3 scripts/update_docs_version.py

      - name: Build documentation
        run: |
          echo "Building Docusaurus documentation..."
          just docs-build

      - name: Check for changes
        id: check_changes
        run: |
          if git diff --quiet && git diff --cached --quiet; then
            echo "changes=false" >> $GITHUB_OUTPUT
            echo "No changes detected in documentation"
          else
            echo "changes=true" >> $GITHUB_OUTPUT
            echo "Changes detected in documentation"
            git status --porcelain
          fi

      - name: Commit and push documentation updates
        if: steps.check_changes.outputs.changes == 'true'
        run: |
          # Create a new branch for the documentation updates
          BRANCH_NAME="docs/auto-update-$(date +%Y%m%d-%H%M%S)"
          git checkout -b "$BRANCH_NAME"
          
          # Add all changes except workflow files
          git add docusaurus/
          
          git commit -m "docs: update generated documentation
          
          - Updated CLI command documentation
          - Regenerated Docusaurus build files
          - Updated version information
          
          Auto-generated by GitHub Actions"
          
          git push origin "$BRANCH_NAME"
          
          # Store branch name for next step
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV

      - name: Create Pull Request
        if: steps.check_changes.outputs.changes == 'true'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          PR_URL=$(gh pr create \
            --base docs \
            --head "$BRANCH_NAME" \
            --title "docs: auto-update generated documentation" \
            --body "ðŸ¤– **Automated Documentation Update**
          
          This PR contains automatically generated documentation updates:
          
          - âœ… Updated CLI command documentation
          - âœ… Regenerated Docusaurus build files  
          - âœ… Updated version information
          
          > This PR was created and will be auto-merged by GitHub Actions")
          
          echo "PR_URL=$PR_URL" >> $GITHUB_ENV

      - name: Auto-merge Pull Request
        if: steps.check_changes.outputs.changes == 'true'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Wait a moment for PR to be fully created
          sleep 5
          
          # Auto-merge the PR
          gh pr merge "$PR_URL" --squash --auto
          
          echo "âœ… PR created and set to auto-merge: $PR_URL"

      - name: No changes detected
        if: steps.check_changes.outputs.changes == 'false'
        run: |
          echo "âœ… Documentation is already up to date"