name: Update Documentation

on:
  push:
    branches: ["main"]
    paths:
      - 'vantage_cli/**'
      - 'scripts/generate_complete_docs.py'
      - 'scripts/update_docs_version.py'
      - 'pyproject.toml'
      - 'docusaurus/**'
  
  workflow_dispatch:

concurrency:
  group: "update-docs"
  cancel-in-progress: true

permissions:
  contents: write
  pull-requests: write

jobs:
  update-docs:
    name: Update Documentation
    runs-on: ubuntu-24.04
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: yarn
          cache-dependency-path: docusaurus/yarn.lock

      - name: Install just
        run: sudo snap install just --classic

      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Create docs update branch
        run: |
          BRANCH_NAME="docs-update-$(date +%Y%m%d-%H%M%S)"
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV
          git checkout -b "$BRANCH_NAME"

      - name: Generate updated documentation
        run: |
          echo "Generating updated CLI documentation..."
          python3 scripts/generate_complete_docs.py
          python3 scripts/update_docs_version.py

      - name: Build documentation
        run: |
          echo "Building Docusaurus documentation..."
          just docs-build

      - name: Check for changes
        id: check_changes
        run: |
          if git diff --quiet && git diff --cached --quiet; then
            echo "changes=false" >> $GITHUB_OUTPUT
            echo "No changes detected in documentation"
          else
            echo "changes=true" >> $GITHUB_OUTPUT
            echo "Changes detected in documentation"
            git status --porcelain
          fi

      - name: Commit documentation updates
        if: steps.check_changes.outputs.changes == 'true'
        run: |
          # Add all changes except workflow files
          git add --all
          git reset -- .github/workflows/
          
          # Check if there are still changes to commit after excluding workflows
          if git diff --cached --quiet; then
            echo "No documentation changes to commit (only workflow changes detected)"
            echo "changes=false" >> $GITHUB_OUTPUT
            exit 0
          fi
          git commit -m "docs: update generated documentation
          
          - Updated CLI command documentation
          - Regenerated Docusaurus build files
          - Updated version information
          
          Auto-generated by GitHub Actions"

      - name: Push docs update branch
        if: steps.check_changes.outputs.changes == 'true'
        run: |
          git push origin "$BRANCH_NAME"

      - name: Create Pull Request
        if: steps.check_changes.outputs.changes == 'true'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh pr create \
            --title "docs: update generated documentation" \
            --body "## ðŸ“š Documentation Update

          This PR contains automatically generated documentation updates:

          - âœ… Updated CLI command documentation from latest code
          - âœ… Regenerated Docusaurus build files
          - âœ… Updated version information

          ### Changes
          - Generated from latest CLI help text
          - Built documentation assets
          - Version alignment with current codebase

          **This is an automated PR created by GitHub Actions.**" \
            --head "$BRANCH_NAME" \
            --base main \
            --label "documentation" \
            --label "automated"

      - name: Auto-merge Pull Request
        if: steps.check_changes.outputs.changes == 'true'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Wait a moment for PR to be created
          sleep 5
          
          # Get the PR number
          PR_NUMBER=$(gh pr list --head "$BRANCH_NAME" --json number --jq '.[0].number')
          
          if [ -n "$PR_NUMBER" ]; then
            echo "Auto-merging PR #$PR_NUMBER"
            gh pr merge "$PR_NUMBER" --squash --delete-branch
          else
            echo "Could not find PR to auto-merge"
            exit 1
          fi

      - name: No changes detected
        if: steps.check_changes.outputs.changes == 'false'
        run: |
          echo "âœ… Documentation is already up to date"
          git checkout main
          git branch -D "$BRANCH_NAME"